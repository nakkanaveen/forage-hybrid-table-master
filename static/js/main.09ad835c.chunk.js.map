{"version":3,"sources":["components/TransactionTable/styles.ts","components/Footer/styles.ts","components/Footer/index.tsx","components/TransactionTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo-uf-ifas.png","assets/background.jpg","components/Header/styles.ts","components/Header/index.tsx","styles/global.ts","components/FooterFelizardo/styles.ts","components/FooterFelizardo/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","header","Content","Footer","_jsx","children","_jsxs","className","href","target","rel","TransactionTable","data","setData","useState","filter","setFilter","chartDataCorn","setChartDataCorn","chartDataCornSilage","setChartDataCornSilage","chartDataForageSoghum","setChartDataForageSoghum","chartDataSoghumSudan","setChartDataSoghumSudan","screenSwitch","setScreenSwitch","windowWidth","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","chartWidth","chartHeight","filteredData","setFilteredData","yearFilter","setYearFilter","companyFilter","setCompanyFilter","speciesFilter","setSpeciesFilter","seasonFilter","setSeasonFilter","useEffect","auxData","season_filtered","dt","season","selectedSeasonFilter","species","selectedSpeciesFilter","length","includes","company","selectedCompanyFilter","year","Number","fetch","then","resp","json","formattedData","map","el","hybrid","companyhybrid","relativematurity","topyield","yield","at35dm","topmilksilage","milksilage","topmilkacre","milkacre","drymatter","crudeprotein","ndf","ndfd","at240undf","adf","starch","sugar","nel","ivdmd","tdn","yielddigestiblendf","diseasedonotuse","disease","donotuselodging","lodging","active","mostCurrentYear","reduce","max","item","toString","columns","title","field","defaultSort","render","row","handleClickChart","handleClickTable","allYears","allYearsSingle","Array","from","Set","sort","reverse","allCompanies","allCompaniesSingle","allSpecies","allSpeciesSingle","allSeasons","allSeasonsSingle","Button","onClick","variant","style","fontSize","Select","labelId","id","value","label","onChange","e","MenuItem","multiple","MaterialTable","icons","Filter","options","filtering","emptyRowsWhenPaging","pageSize","pageSizeOptions","exportButton","exportAllData","padding","tableLayout","headerStyle","backgroundColor","color","rowStyle","index","teste","searchFieldVariant","detailPanel","tooltip","rowData","display","gridTemplateColumns","gap","textAlign","fontWeight","margin","ScatterChart","width","height","top","right","bottom","left","CartesianGrid","strokeDasharray","ZAxis","dataKey","name","unit","XAxis","tickCount","type","domain","YAxis","interval","Tooltip","cursor","Legend","Scatter","fill","main","Dashboard","img2","Header","src","logoImg","alt","GlobalStyle","createGlobalStyle","footer","FooterContent","Separator","GithubLink","a","FooterFelizardo","FaGithub","App","_Fragment","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09ad835c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  //Fix Display Here\n  /* max-width: 1120px;\n  height: 230px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly; */\n  \n  .custom-filters {\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n  }\n\n  .custom-filter-item {\n    display: flex;\n    align-items: center;\n    margin: 0.2rem 0rem;\n  }\n\n  .custom-filter-item:last-child{\n    margin-bottom: 2rem;\n  }\n\n  .custom-filter-item p{\n    width: 150px;\n  }\n\n  .custom-filter-item .select-filter{\n    background-color: #e0e0e0;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    width: 180px;\n  }\n\n  .show-filter-select-box {\n    margin: 0.5rem 0rem;\n    width: 170px;\n  }\n\n  table {\n    width: 100%;\n\n    th {\n      color: var(--text-title);\n      padding: 1rem 0rem;\n      text-align: center;\n      line-height: 1rem;\n      font-weight: 600;\n    }\n\n    td {\n      text-align: center;\n    }\n  }\n\n  button {\n    margin: 0.5rem;\n    font-weight: 600;\n    font-family: \"Poppins\", sans-serif;\n    color: #000;\n  }\n\n  button.selected {\n    margin: 0.5rem;\n    font-weight: 600;\n    font-family: \"Poppins\", sans-serif;\n    color: #fff;\n    background-color: var(--green);\n  }\n\n  button.selected {\n    margin: 0.5rem;\n    font-weight: 600;\n    font-family: \"Poppins\", sans-serif;\n    color: #fff;\n    background-color: var(--green);\n  }\n\n  button.tutorial-button{\n    margin-left: 2rem;\n    background-color: var(--orange);\n  }\n  \n  .tutorial-button a{\n    color: #fafafa;\n    text-decoration: none;\n  }\n\n  .tutorial-button:hover{\n    background-color: var(--orange-dark);\n  }\n\n  .chart-title {\n    text-align: center;\n    font-size: 1.25rem;\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n    font-weight: 500;\n    line-height: 1.6;\n    letter-spacing: 0.0075em;\n    padding: 0.6rem 0 0.6rem 0;\n  }\n\n  .chart-sub-title {\n    text-align: center;\n    background-color: var(--orange);\n    padding: 0.6rem 0 0.6rem 0;\n    font-weight: bold;\n    font-size: 0.9rem;\n  }\n\n  .chart-container {\n    margin: auto;\n  }\n\n  .chart-box {\n    border: 0;\n\t  border-radius: 2px;\n\t  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  }\n\n  .top-characteristic {\n    color: var(--green);\n    font-weight: bold;\n    font-size: 0.9rem;\n  }\n\n`;\n","import styled from \"styled-components\";\nimport img from \"../../assets/background.png\";\nimport img2 from \"../../assets/background.jpg\";\n\n\nexport const Container = styled.header`\n  \n`;\n\nexport const Content = styled.div`\n  .footer {\n    display: grid;\n    grid-template-columns: 1fr;\n    margin: 1rem;\n  }\n`;\n","import logoImg from \"../../assets/logo-uf-ifas.png\";\nimport { Container, Content } from \"./styles\";\n\nexport function Footer() {\n  return (\n    <Container>\n      <Content>\n        <div className=\"footer\">\n          <span>All the information were gathered from the University of Florida Corn Silage and Forage Field Day WebSite.</span>\n          <span>\n            Visit the{\" \"}\n            <b><a href=\"https://programs.ifas.ufl.edu/forage/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {\" \"}\n              UF/IFAS Forage Team{\"\"}\n            </a></b>{\" and the \"}\n            <b><a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {\"\"}\n              Corn Silage and Forage Field Day{\"\"}\n            </a></b>{\" \"}\n            for more information.\n          </span>\n          <span>Contact your <b><a href=\"https://directory.ifas.ufl.edu/extprogram?pageID=3&p=BB\" target=\"_blank\" rel=\"noopener noreferrer\">Local Extension Agent</a></b> or reach out to us through <b><a href=\"mailto: forages@ifas.ufl.edu\">forages@ifas.ufl.edu</a></b>.</span>\n        </div>\n      </Content>\n    </Container>\n  );\n}\n","import MaterialTable from \"material-table\";\nimport { Button, Select, MenuItem } from \"@material-ui/core\";\nimport { useLayoutEffect, useEffect, useState } from \"react\";\nimport { Container } from \"./styles\";\nimport {\n  ScatterChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ZAxis,\n  Tooltip,\n  Legend,\n  Scatter,\n} from \"recharts\";\nimport { Footer } from \"../Footer\";\n\ninterface dataProps {\n  year: number;\n  species: string;\n  company: string;\n  hybrid: string;\n  companyhybrid: string;\n  season: string;\n  relativematurity: number | string | null;\n  topyield: number | string | null;\n  yield: number | string | null;\n  at35dm: number | string | null;\n  topmilksilage: number | string | null;\n  milksilage: number | string | null;\n  topmilkacre: number | string | null;\n  milkacre: number | string | null;\n  drymatter: number | string | null;\n  crudeprotein: number | string | null;\n  ndf: number | string | null;\n  ndfd: number | string | null;\n  at240undf: number | string | null;\n  adf: number | string | null;\n  starch: number | string | null;\n  sugar: number | string | null;\n  nel: number | string | null;\n  ivdmd: number | string | null;\n  tdn: number | string | null;\n  yielddigestiblendf: number | string | null;\n  diseasedonotuse: number | string | null;\n  disease: number | string | null;\n  donotuselodging: number | string | null;\n  lodging: number | string | null;\n  active: number;\n}\n\ninterface chartDataProps {\n  company: string;\n  hybrid: string;\n  totalProduction: number | string;\n  milkPerTon: number | string;\n  year: number;\n  season: string;\n  type: string;\n}\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\n// function ShowWindowDimensions(props) {\n//   const [width, height] = useWindowSize();\n//   return <span>Window size: {width} x {height}</span>;\n// }\n\nexport function TransactionTable() {\n  const [data, setData] = useState<dataProps[]>([]);\n  const [filter, setFilter] = useState<boolean>(false);\n  const [chartDataCorn, setChartDataCorn] = useState<chartDataProps[]>([]);\n  const [chartDataCornSilage, setChartDataCornSilage] = useState<\n    chartDataProps[]\n  >([]);\n  const [chartDataForageSoghum, setChartDataForageSoghum] = useState<\n    chartDataProps[]\n  >([]);\n  const [chartDataSoghumSudan, setChartDataSoghumSudan] = useState<\n    chartDataProps[]\n  >([]);\n\n  const [screenSwitch, setScreenSwitch] = useState<string>(\"table2020\");\n\n  const windowWidth = useWindowSize()[0];\n  const chartWidth = windowWidth > 1120 ? 1120 - 30 : windowWidth - 30;\n  const chartHeight = chartWidth < 600 ? 300 : chartWidth / 2;\n\n  //////////////////////////////////////////\n  // Customized Filters\n  //////////////////////////////////////////\n\n  const [filteredData, setFilteredData] = useState<dataProps[]>([]);\n  const [yearFilter, setYearFilter] = useState<string>(\"all\");\n  const [companyFilter, setCompanyFilter] = useState<string[]>([]);\n  const [speciesFilter, setSpeciesFilter] = useState<string>(\"Corn\");\n  const [seasonFilter, setSeasonFilter] = useState<string>(\"all\");\n\n  useEffect(() => {\n    const year_filtered = selectedYearFilter(data);\n    const company_filtered = selectedCompanyFilter(year_filtered);\n    const species_filtered = selectedSpeciesFilter(company_filtered);\n    const season_filtered = selectedSeasonFilter(species_filtered);\n\n    setFilteredData(season_filtered);\n  }, [yearFilter, companyFilter, speciesFilter, seasonFilter]);\n\n  function selectedYearFilter(auxData: dataProps[]): dataProps[] {\n    return yearFilter === \"all\"\n      ? auxData\n      : auxData.filter((dt) => dt.year === Number(yearFilter));\n  }\n  function selectedCompanyFilter(auxData: dataProps[]): dataProps[] {\n    return companyFilter.length === 0\n      ? auxData\n      : auxData.filter((dt) => companyFilter.includes(dt.company));\n  }\n  function selectedSpeciesFilter(auxData: dataProps[]): dataProps[] {\n    return speciesFilter === \"all\"\n      ? auxData\n      : auxData.filter((dt) => dt.species === speciesFilter);\n  }\n  function selectedSeasonFilter(auxData: dataProps[]): dataProps[] {\n    return seasonFilter === \"all\"\n      ? auxData\n      : auxData.filter((dt) => dt.season === seasonFilter);\n  }\n\n  //////////////////////////////////////////\n  // End of Customized Filters\n  //////////////////////////////////////////\n\n  // Populating Data Set\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/devfel/forage-hybrid-table/master/src/data/data.json\"\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        const formattedData = resp\n          .map((el: dataProps) => {\n            return {\n              // ALL DATA TO BE LOADED BY THE SOFTWARE\n              year: el.year,\n              species: el.species,\n              company: el.company,\n              hybrid: el.hybrid,\n              companyhybrid: el.company + \" / \" + el.hybrid,\n              season: el.season,\n              relativematurity:\n                el.relativematurity === null || el.relativematurity === \"\"\n                  ? -1\n                  : Number(el.relativematurity),\n              topyield: el.topyield,\n              yield:\n                el.yield === null || el.yield === \"\" ? -1 : Number(el.yield),\n              at35dm:\n                el.at35dm === null || el.at35dm === \"\" ? -1 : Number(el.at35dm),\n              topmilksilage: el.topmilksilage,\n              milksilage:\n                el.milksilage === null || el.milksilage === \"\"\n                  ? -1\n                  : Number(el.milksilage),\n              topmilkacre: el.topmilkacre,\n              milkacre:\n                el.milkacre === null || el.milkacre === \"\"\n                  ? -1\n                  : Number(el.milkacre),\n              drymatter:\n                el.drymatter === null || el.drymatter === \"\"\n                  ? -1\n                  : Number(el.drymatter),\n              crudeprotein:\n                el.crudeprotein === null || el.crudeprotein === \"\"\n                  ? -1\n                  : Number(el.crudeprotein),\n              ndf: el.ndf === null || el.ndf === \"\" ? -1 : Number(el.ndf),\n              ndfd: el.ndfd === null || el.ndfd === \"\" ? -1 : Number(el.ndfd),\n              at240undf:\n                el.at240undf === null || el.at240undf === \"\"\n                  ? -1\n                  : Number(el.at240undf),\n              adf: el.adf === null || el.adf === \"\" ? -1 : Number(el.adf),\n              starch:\n                el.starch === null || el.starch === \"\" ? -1 : Number(el.starch),\n              sugar:\n                el.sugar === null || el.sugar === \"\" ? -1 : Number(el.sugar),\n              nel: el.nel === null || el.nel === \"\" ? -1 : Number(el.nel),\n              ivdmd:\n                el.ivdmd === null || el.ivdmd === \"\" ? -1 : Number(el.ivdmd),\n              tdn: el.tdn === null || el.tdn === \"\" ? -1 : Number(el.tdn),\n              yielddigestiblendf:\n                el.yielddigestiblendf === null || el.yielddigestiblendf === \"\"\n                  ? -1\n                  : Number(el.yielddigestiblendf),\n              diseasedonotuse:\n                el.diseasedonotuse === null || el.diseasedonotuse === \"\"\n                  ? -1\n                  : Number(el.diseasedonotuse),\n              disease:\n                el.disease === null || el.disease === \"\"\n                  ? -1\n                  : Number(el.disease),\n              donotuselodging:\n                el.donotuselodging === null || el.donotuselodging === \"\"\n                  ? -1\n                  : Number(el.donotuselodging),\n              lodging:\n                el.lodging === null || el.lodging === \"\"\n                  ? -1\n                  : Number(el.lodging),\n              active: el.active,\n            };\n          })\n          .filter((el: dataProps) => el.active === 1); //FILTER TO LOAD ONLY ELEMENTS WITH ACTIVE === 1\n\n        // Find the most current year\n        const mostCurrentYear = formattedData.reduce(\n          (max: number, item: dataProps) => (item.year > max ? item.year : max),\n          formattedData[0].year\n        );\n\n        setFilteredData(formattedData);\n        setData(formattedData);\n\n        //Use the most current year as default filter\n        setYearFilter(mostCurrentYear.toString());\n        setSpeciesFilter(\"Corn\"); //TODO SELECT THE CORRECT VALUE DEPENDING ON THE USER.\n        return setData(formattedData);\n      });\n  }, []);\n\n  /* TODO - Fix Chart\n    // Populating Data Set - Summer Corn (*NO IF ON SEASON)\n    useEffect(() => {\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\n        if (el.type === \"Corn\") {\n          return {\n            company: el.company,\n            hybrid: el.hybrid,\n            totalProduction: el.totalProduction,\n            milkPerTon: el.milkPerTon,\n            year: el.year,\n            season: el.season,\n            type: el.type,\n          };\n        } else\n          return {\n            company: \"-\",\n            hybrid: \"-\",\n            totalProduction: \"-\",\n            milkPerTon: \"-\",\n            year: 0,\n            season: \"-\",\n            type: \"-\",\n          };\n      });\n  \n      setChartDataCorn(formattedChartDataCorn);\n    }, [filteredData]);\n  \n    // Populating Data Set - Spring Corn Silage (*NO IF ON SEASON)\n    useEffect(() => {\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\n        if (el.type === \"Corn Silage\") {\n          return {\n            company: el.company,\n            hybrid: el.hybrid,\n            totalProduction: el.totalProduction,\n            milkPerTon: el.milkPerTon,\n            year: el.year,\n            season: el.season,\n            type: el.type,\n          };\n        } else\n          return {\n            company: \"-\",\n            hybrid: \"-\",\n            totalProduction: \"-\",\n            milkPerTon: \"-\",\n            year: 0,\n            season: \"-\",\n            type: \"-\",\n          };\n      });\n  \n      setChartDataCornSilage(formattedChartDataCorn);\n    }, [filteredData]);\n  \n    // Populating Data Set - Summer Forage Soghum (*NO IF ON SEASON)\n    useEffect(() => {\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\n        if (el.type === \"Forage Soghum\") {\n          return {\n            company: el.company,\n            hybrid: el.hybrid,\n            totalProduction: el.totalProduction,\n            milkPerTon: el.milkPerTon,\n            year: el.year,\n            season: el.season,\n            type: el.type,\n          };\n        } else\n          return {\n            company: \"-\",\n            hybrid: \"-\",\n            totalProduction: \"-\",\n            milkPerTon: \"-\",\n            year: 0,\n            season: \"-\",\n            type: \"-\",\n          };\n      });\n  \n      setChartDataForageSoghum(formattedChartDataCorn);\n    }, [filteredData]);\n  \n    // Populating Data Set - Summer Soghum Sudan (*NO IF ON SEASON)\n    useEffect(() => {\n      const formattedChartDataCorn = filteredData.map((el: chartDataProps) => {\n        if (el.type === \"Soghum Sudan\") {\n          return {\n            company: el.company,\n            hybrid: el.hybrid,\n            totalProduction: el.totalProduction,\n            milkPerTon: el.milkPerTon,\n            year: el.year,\n            season: el.season,\n            type: el.type,\n          };\n        } else\n          return {\n            company: \"-\",\n            hybrid: \"-\",\n            totalProduction: \"-\",\n            milkPerTon: \"-\",\n            year: 0,\n            season: \"-\",\n            type: \"-\",\n          };\n      });\n  \n      setChartDataSoghumSudan(formattedChartDataCorn);\n    }, [filteredData]);\n  END OF CHART DATA POPULATING */\n\n  // const TableCellStyle = { borderRight: \"1px solid #e5e5e5\" };\n  const BoldCellStyle = { fontWeight: 600 };\n\n  // --- LOOKUPS USED WITH THE OLD FILTERING SYSTEM ---\n  // const yearsLookup = {\n  //   2020: \"2020\",\n  //   2019: \"2019\",\n  //   2018: \"2018\",\n  //   2017: \"2017\",\n  // };\n  // const speciesLookup = {\n  //   \"Corn Silage\": \"Corn Silage\",\n  //   Corn: \"Corn\",\n  //   \"Soghum Sudan\": \"Soghum Sudan\",\n  //   \"Forage Soghum\": \"Forage Soghum\",\n  // };\n  // const seasonLookup = {\n  //   Spring: \"Spring\",\n  //   Summer: \"Summer\"\n  // };\n  // //{title: \"Year\", field: \"year\", lookup: yearsLookup, filterPlaceholder: \"Select\" },\n  // --- ---\n\n  const columns = [\n    // THE MAIN COLUMNS THAT WILL APPEAR IN THE TABLE\n    // All Comentaries are columns that will NOT be displayed as main columns.\n\n    { title: \"Year\", field: \"year\" },\n    //{ title: \"Species\", field: \"species\" },\n    { title: \"Company\", field: \"company\" },\n    { title: \"Hybrid\", field: \"hybrid\" },\n    { title: \"Season\", field: \"season\" },\n    //{ title: \"Relative Maturity\", field: \"relativematurity\" },\n    //{ title: \"Top Yield\", field: \"topyield\" },\n    {\n      title: \"Yield Dry Tons/acre\",\n      field: \"yield\",\n      defaultSort: \"desc\",\n      render: (row: any) => (\n        <div className={row.topyield === \"*\" ? \"top-characteristic\" : \"\"}>\n          {row.yield !== -1 ? row.yield : \"n/a\"}\n        </div>\n      ),\n    },\n    //{ title: \"35% DM T/A\", field: \"at35dm\" },\n    //{ title: \"Top Milk lb/Ton of silage\", field: \"topmilksilage\" },\n    {\n      title: \"Milk lb/Ton of silage\",\n      field: \"milksilage\",\n      render: (row: any) => (\n        <div className={row.topmilksilage === \"*\" ? \"top-characteristic\" : \"\"}>\n          {row.milksilage !== -1 ? row.milksilage : \"n/a\"}\n        </div>\n      ),\n    },\n    //{ title: \"Top Milk lb/acre\", field: \"topmilkacre\" },\n    {\n      title: \"Milk lb/acre\",\n      field: \"milkacre\",\n      render: (row: any) => (\n        <div className={row.topmilkacre === \"*\" ? \"top-characteristic\" : \"\"}>\n          {row.milkacre !== -1 ? row.milkacre : \"n/a\"}\n        </div>\n      ),\n    },\n    //{ title: \"Dry matter %\", field: \"drymatter\" },\n    //{ title: \"Crude protein %\", field: \"crudeprotein\" },\n    {\n      title: \"NDF %\",\n      field: \"ndf\",\n      render: (row: any) => <div>{row.ndf !== -1 ? row.ndf : \"n/a\"}</div>,\n    },\n    {\n      title: \"NDFD %\",\n      field: \"ndfd\",\n      render: (row: any) => <div>{row.ndfd !== -1 ? row.ndfd : \"n/a\"}</div>,\n    },\n    //{ title: \"240 UNDF\", field: \"at240undf\" },\n    //{ title: \"ADF %\", field: \"adf\" },\n    {\n      title: \"Starch %\",\n      field: \"starch\",\n      render: (row: any) => <div>{row.starch !== -1 ? row.starch : \"n/a\"}</div>,\n    },\n    //{ title: \"Sugar %\", field: \"sugar\" },\n    //{ title: \"NEL Mcal/lb\", field: \"nel\" },\n    //{ title: \"IVDMD %\", field: \"ivdmd\" }, //TODO\n    //{ title: \"TDN %\", field: \"tdn\" },\n    //{ title: \"Yield digestible NDF, T/A\", field: \"yielddigestiblendf\" },\n    //{ title: \"Disease Not to be Used\", field: \"diseasedonotuse\" },\n    //{ title: \"Disease %\", field: \"disease\" },\n    //{ title: \"Lodging Not to be Used\", field: \"donotuselodging\" },\n    //{ title: \"Lodging %\", field: \"lodging\" },\n  ];\n\n  const handleChangeFilter = () => {\n    setFilter(!filter);\n  };\n  const handleClickChart = () => {\n    setScreenSwitch(\"chart2020\");\n  };\n  const handleClickTable = () => {\n    setScreenSwitch(\"table2020\");\n  };\n\n  //Variables to populate filters dinamically\n  const allYears = data.map((el) => el.year);\n  const allYearsSingle = Array.from(new Set(allYears)).sort().reverse();\n  const allCompanies = data.map((el) => el.company);\n  const allCompaniesSingle = Array.from(new Set(allCompanies)).sort();\n  const allSpecies = data.map((el) => el.species);\n  const allSpeciesSingle = Array.from(new Set(allSpecies)).sort();\n  const allSeasons = data.map((el) => el.season);\n  const allSeasonsSingle = Array.from(new Set(allSeasons)).sort();\n\n  if (screenSwitch === \"table2020\") {\n    return (\n      <Container>\n        <Button\n          onClick={handleClickTable}\n          variant=\"contained\"\n          className=\"selected\"\n        >\n          Table\n        </Button>\n        <Button onClick={handleClickChart} variant=\"contained\">\n          Chart\n        </Button>\n\n        <Button className=\"tutorial-button\" variant=\"contained\">\n          <a\n            href=\"https://www.youtube.com/watch?v=CjeumRMMWf0\"\n            target=\"_blank\"\n          >\n            Tutorial\n          </a>\n        </Button>\n\n        {/* Not using the original filters\n        <div className=\"show-filter-select-box\">\n          <FormControlLabel style={{ fontSize: \"20rem\" }} control={<Checkbox checked={filter} onChange={handleChangeFilter} color=\"default\" />} label=\"Hide/Show Filters\" />\n        </div>\n        */}\n\n        {/* CUSTOM FILTERS BEGIN - TABLE PAGE */}\n        <div className=\"show-filter-select-box\">\n          <p style={{ fontSize: \"1rem\" }}>\n            {\" \"}\n            <b>Available Filters</b>{\" \"}\n          </p>\n        </div>\n\n        <div className=\"custom-filters\">\n          <div className=\"custom-species-filter custom-filter-item\">\n            <p>Filter by Species:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-species-label\"\n              id=\"filter-species-id\"\n              value={speciesFilter}\n              label=\"Species\"\n              onChange={(e) => setSpeciesFilter(e.target.value as any)}\n            >\n              {allSpeciesSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"custom-year-filter custom-filter-item\">\n            <p>Filter by Year:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-year-label\"\n              id=\"filter-year-id\"\n              value={yearFilter}\n              label=\"Year\"\n              onChange={(e) => setYearFilter(e.target.value as any)}\n            >\n              <MenuItem value={\"all\"}>\n                <em>All</em>\n              </MenuItem>\n              {allYearsSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n\n              {/* //Old Method used to Populate Filters Manually\n              <MenuItem value={2020}>2020</MenuItem>\n              <MenuItem value={2019}>2019</MenuItem>\n              <MenuItem value={2018}>2018</MenuItem>\n              <MenuItem value={2017}>2017</MenuItem>\n              */}\n            </Select>\n          </div>\n\n          <div className=\"custom-season-filter custom-filter-item\">\n            <p>Filter by Season:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-season-label\"\n              id=\"filter-season-id\"\n              value={seasonFilter}\n              label=\"Season\"\n              onChange={(e) => setSeasonFilter(e.target.value as any)}\n            >\n              <MenuItem value={\"all\"}>\n                <em>All</em>\n              </MenuItem>\n              {allSeasonsSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"custom-company-filter custom-filter-item\">\n            <p>Filter by Companies:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-company-label\"\n              id=\"filter-company-id\"\n              value={companyFilter}\n              multiple\n              label=\"Company\"\n              onChange={(e) => setCompanyFilter(e.target.value as string[])}\n            >\n              <MenuItem value={\"Companies\"}>\n                <em>Companies</em>\n              </MenuItem>\n              {allCompaniesSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n        </div>\n        {/* CUSTOM FILTERS ENDS - TABLE PAGE */}\n\n        <MaterialTable\n          icons={{ Filter: (() => <div></div>) as any }}\n          columns={columns as any}\n          data={filteredData}\n          options={{\n            filtering: filter,\n            emptyRowsWhenPaging: false,\n            pageSize: 10,\n            pageSizeOptions: [10, 20, 50, 100],\n            exportButton: true,\n            exportAllData: true,\n            padding: \"dense\",\n            tableLayout: \"auto\",\n            headerStyle: {\n              backgroundColor: \"#FA4616\",\n              color: \"#fefefe\",\n            },\n            rowStyle: (data, index, teste) =>\n              index % 2 == 0\n                ? {\n                    backgroundColor: \"#f8f8f8\",\n                    fontSize: \"85%\",\n                  }\n                : {\n                    backgroundColor: \"#fdfdfd\",\n                    fontSize: \"85%\",\n                  },\n            searchFieldVariant: \"outlined\",\n          }}\n          detailPanel={[\n            {\n              tooltip: \"Show Details\",\n              render: (rowData) => {\n                return (\n                  <div\n                    style={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"repeat(5, 1fr)\",\n                      gap: \"1rem\",\n                      fontSize: \"1rem\",\n                      padding: \"1rem\",\n                      textAlign: \"center\",\n                      color: \"white\",\n                      backgroundColor: \"#0021A5\",\n                    }}\n                  >\n                    {/*** SECONDARY CHARACTERISTICS ***/}\n                    <p>\n                      Relative Maturity:{\" \"}\n                      {rowData.relativematurity !== -1\n                        ? rowData.relativematurity\n                        : \"n/a\"}\n                    </p>\n                    <p>\n                      Estimated Silage T/A:{\" \"}\n                      {/* ESTIMATED SILAGE @ 35%DM (TONS/ACRE) */}\n                      {rowData.at35dm !== -1 ? rowData.at35dm : \"n/a\"}\n                    </p>\n                    <p>\n                      Dry matter %:{\" \"}\n                      {rowData.drymatter !== -1 ? rowData.drymatter : \"n/a\"}\n                    </p>\n                    <p>\n                      Crude protein %:{\" \"}\n                      {rowData.crudeprotein !== -1\n                        ? rowData.crudeprotein\n                        : \"n/a\"}\n                    </p>\n                    <p>\n                      240 UNDF:{\" \"}\n                      {rowData.at240undf !== -1 ? rowData.at240undf : \"n/a\"}\n                    </p>\n                    <p>ADF %: {rowData.adf !== -1 ? rowData.adf : \"n/a\"}</p>\n                    <p>\n                      Sugar %: {rowData.sugar !== -1 ? rowData.sugar : \"n/a\"}\n                    </p>\n                    <p>\n                      NEL Mcal/lb: {rowData.nel !== -1 ? rowData.nel : \"n/a\"}\n                    </p>\n                    <p>\n                      IVDMD %: {rowData.ivdmd !== -1 ? rowData.ivdmd : \"n/a\"}\n                    </p>\n                    <p>TDN %: {rowData.tdn !== -1 ? rowData.tdn : \"n/a\"}</p>\n                    <p>\n                      Yield digestible NDF, T/A:{\" \"}\n                      {rowData.yielddigestiblendf !== -1\n                        ? rowData.yielddigestiblendf\n                        : \"n/a\"}\n                    </p>\n                    <p>\n                      Disease %:{\" \"}\n                      {rowData.disease !== -1 ? rowData.disease : \"n/a\"}\n                    </p>\n                    <p>\n                      Lodging %:{\" \"}\n                      {rowData.lodging !== -1 ? rowData.lodging : \"n/a\"}\n                    </p>\n                  </div>\n                );\n              },\n            },\n          ]}\n          title=\"UF Silage Hybrid Trial Table\"\n        />\n        <span style={{ color: \"darkblue\", fontWeight: \"bold\", margin: \"1rem\" }}>\n          Blue and bold characteristics in the table mean it was a top performer\n          within that season and year.\n        </span>\n        <br></br>\n        <Footer />\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <Button onClick={handleClickTable} variant=\"contained\">\n          Table\n        </Button>\n        <Button\n          onClick={handleClickChart}\n          variant=\"contained\"\n          className=\"selected\"\n        >\n          Chart\n        </Button>\n\n        <Button className=\"tutorial-button\" variant=\"contained\">\n          <a href=\"#\">Tutorial</a>\n        </Button>\n\n        {/* CUSTOM FILTERS BEGIN - CHART PAGE */}\n        <div className=\"show-filter-select-box\">\n          <p style={{ fontSize: \"1rem\" }}>\n            {\" \"}\n            <b>Available Filters</b>{\" \"}\n          </p>\n        </div>\n\n        <div className=\"custom-filters\">\n          <div className=\"custom-species-filter custom-filter-item\">\n            <p>Filter by Species:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-species-label\"\n              id=\"filter-species-id\"\n              value={speciesFilter}\n              label=\"Species\"\n              onChange={(e) => setSpeciesFilter(e.target.value as any)}\n            >\n              {allSpeciesSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"custom-year-filter custom-filter-item\">\n            <p>Filter by Year:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-year-label\"\n              id=\"filter-year-id\"\n              value={yearFilter}\n              label=\"Year\"\n              onChange={(e) => setYearFilter(e.target.value as any)}\n            >\n              <MenuItem value={\"all\"}>\n                <em>All</em>\n              </MenuItem>\n              {allYearsSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n\n              {/* //Old Method used to Populate Filters Manually\n              <MenuItem value={2020}>2020</MenuItem>\n              <MenuItem value={2019}>2019</MenuItem>\n              <MenuItem value={2018}>2018</MenuItem>\n              <MenuItem value={2017}>2017</MenuItem>\n              */}\n            </Select>\n          </div>\n\n          <div className=\"custom-season-filter custom-filter-item\">\n            <p>Filter by Season:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-season-label\"\n              id=\"filter-season-id\"\n              value={seasonFilter}\n              label=\"Season\"\n              onChange={(e) => setSeasonFilter(e.target.value as any)}\n            >\n              <MenuItem value={\"all\"}>\n                <em>All</em>\n              </MenuItem>\n              {allSeasonsSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n\n          <div className=\"custom-company-filter custom-filter-item\">\n            <p>Filter by Companies:</p>\n            <Select\n              className=\"select-filter\"\n              labelId=\"filter-company-label\"\n              id=\"filter-company-id\"\n              value={companyFilter}\n              multiple\n              label=\"Company\"\n              onChange={(e) => setCompanyFilter(e.target.value as string[])}\n            >\n              <MenuItem value={\"Companies\"}>\n                <em>Companies</em>\n              </MenuItem>\n              {allCompaniesSingle.map((el) => (\n                <MenuItem value={el}>{el}</MenuItem>\n              ))}\n            </Select>\n          </div>\n        </div>\n        {/* CUSTOM FILTERS ENDS - CHART PAGE */}\n        <div className=\"chart-box\">\n          <div className=\"chart-title\">UF Silage Hybrid Trial Chart</div>\n          <div className=\"chart-sub-title\" style={{ color: \"#FAFAFA\" }}>\n            Yield Dry Matter (DM tons/acre) X Milk Production (lb milk/ton){\" \"}\n          </div>\n\n          <ScatterChart\n            className=\"chart-container\"\n            width={chartWidth}\n            height={chartHeight}\n            margin={{ top: 20, right: 30, bottom: 10, left: 0 }}\n          >\n            <CartesianGrid strokeDasharray=\"1 1\" />\n            <ZAxis dataKey=\"companyhybrid\" name=\"Company/Hybrid\" unit=\"\" />\n            <XAxis\n              tickCount={4}\n              dataKey=\"yield\"\n              type=\"number\"\n              domain={[1, 16]}\n              name=\"Total Production\"\n              unit=\" lb DM/A\"\n            />\n            <YAxis\n              interval={0}\n              tickCount={4}\n              dataKey=\"milksilage\"\n              type=\"number\"\n              domain={[1400, 4100]}\n              name=\"Milk Production\"\n              unit=\" mk/ton\"\n            />\n            <Tooltip cursor={{ strokeDasharray: \"10 10\" }} />\n            <Legend />\n            <Scatter name={speciesFilter} data={filteredData} fill=\"#22884C\" />\n          </ScatterChart>\n        </div>\n        <Footer />\n      </Container>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0.5rem 1rem;\n  background-color: #fff;\n`;\n","import { TransactionTable } from \"../TransactionTable\";\nimport { Container } from \"./styles\";\n\nexport function Dashboard() {\n  return (\n    <Container>\n      <TransactionTable />\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo-uf-ifas.4f5deef3.png\";","export default __webpack_public_path__ + \"static/media/background.08602167.jpg\";","import styled from \"styled-components\";\nimport img from \"../../assets/background.png\";\nimport img2 from \"../../assets/background.jpg\";\n\n\nexport const Container = styled.header`\n  background: var(--dark-green);\n`;\n\nexport const Content = styled.div`\n  max-width: 1280px;\n  height: 230px;\n  margin: 0 auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  background-image: url(${img2});\n\n  img {\n    opacity: 0.95;\n    width: 160px;\n    height: auto;\n    margin-left: 1rem;\n    margin-right: 1rem;\n    border-radius: 0.4rem;\n    background-color: #fefefe;\n\n    transition: filter 0.4s;\n    &:hover {\n      filter: brightness(1.1);\n    }\n  }\n\n  button {\n    margin-left: 1rem;\n    margin-right: 1rem;\n    font-size: 1.5rem;\n    font-weight: 600;\n    background-color: #fefefe;\n    opacity: 0.9;\n\n    border: 0;\n    padding: 1rem 2rem;\n    border-radius: 0.4rem;\n\n    transition: filter 0.2s;\n    &:hover {\n      filter: brightness(1.2);\n    }\n  }\n`;\n","import logoImg from \"../../assets/logo-uf-ifas.png\";\nimport { Container, Content } from \"./styles\";\n\nexport function Header() {\n  return (\n    <Container>\n      <Content>\n        <a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={logoImg} alt=\"CSFD Logo\" />\n        </a>\n        <button type=\"button\">\n          <a href=\"https://animal.ifas.ufl.edu/extension/courses/csfd/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            UF Silage Hybrid Decision Tool\n          </a>\n        </button>\n      </Content>\n    </Container>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n:root {\n    --red: #e52e4d;\n    --blue: #5429cc;\n    --green: #0021A5;\n    --orange: #fa4616;\n    --orange-dark: #fa1616;\n\n    --dark-green: #0021A5;\n    --light-green: #d2f8d2;\n\n    --blue-light: #6933ff;\n\n    --text-title: #363f5f;\n    --text-body: #969cb3;\n\n    --background: #f0f2f5;\n    --shape: #FFFFFF;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    // default font-size (6.25% per pixel)\n    font-size: 87.5%; //14px\n\n    @media (max-width: 1080px) {\n        font-size: 75%; //13px\n    }\n\n    @media (max-width: 768px) {\n        font-size: 62.5%; //12px\n    }\n}\n\nbody {\n    background: var(--background);\n    -webkit-font-smoothing: antialiased;\n}\n\nbody, input, textarea, button {\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 400;\n}\n\nh1, h2, h3, h4, h5, h6, strong, th {\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 600;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n[disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n}\n\n`;\n","// ProjectFolder/components/FooterFelizardo/styles.ts\nimport styled from \"styled-components\";\n\nexport const Container = styled.footer`\n  background: #f0f2f5;\n  padding: 1rem 0;\n`;\n\nexport const FooterContent = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  padding: 0 2rem;\n`;\n\nexport const Separator = styled.div`\n  height: 20px;\n  width: 1px;\n  background-color: #ccc;\n  margin: 0 1rem;\n`;\n\nexport const GithubLink = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #fff;\n  font-size: 0.875rem;\n  border: 1px solid #6c757d;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.4rem;\n  margin-left: 0.5rem;\n  background-color: #6c757d;\n\n  svg {\n    font-size: 16px;\n    margin-right: 0.5rem;\n  }\n\n  &:hover {\n    background-color: #333;\n  }\n`;\n","import React from \"react\";\nimport { FaGithub } from \"react-icons/fa\"; // Make sure to install react-icons if you haven't\nimport { Container, FooterContent, Separator, GithubLink } from \"./styles\";\n\nexport function FooterFelizardo() {\n  return (\n    <Container>\n      <FooterContent>\n        <span>Developed by Felizardo</span>\n        <Separator />\n        <GithubLink\n          href=\"https://github.com/devfel\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaGithub />\n          DevFel\n        </GithubLink>\n      </FooterContent>\n    </Container>\n  );\n}\n","import { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { FooterFelizardo } from \"./components/FooterFelizardo\";\n\nexport function App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <Dashboard />\n      <FooterFelizardo />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}